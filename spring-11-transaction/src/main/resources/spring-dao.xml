<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
       <!--DataSource:使用spring的数据源替换Mybatis 的配置c3p0, dbcp druid
       这里使用spring提供的jdbc
   -->
       <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
              <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
              <property name="url" value="jdbc:mysql://localhost:3306/db_medical_inspection?characterEncoding=utf8&amp;useSSL=false&amp;useUnicode=true"/>
              <property name="password" value="123456"/>
              <property name="username" value="root"/>
       </bean>
       <!--sqlSessionFactory-->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="dataSource" ref="dataSource"/>
              <!--              绑定mybatis配置文件-->
              <property name="configLocation" value="classpath:mybatis-config.xml"/>
              <property name="mapperLocations" value="classpath:com/mei/dao/*.xml"/>
       </bean>
       <!--SqlSessionTemplate: 就是我们使用的sqlSession-->
       <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
              <!--              只能使用构造器注入SqlSessionFactory，因为他没有set方法-->
              <constructor-arg index="0" ref="sqlSessionFactory"/>
       </bean>


<!--       配置声明式事务-->
       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <constructor-arg ref="dataSource"/>
       </bean>

<!--       结合aop实现事务的织入-->
<!--       配置事务通知-->
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
<!--              给哪些方法配置事务
                  配置事务的传播特性：propagation 默认：REQUIRED
-->
              <tx:attributes>
<!--                     <tx:method name="add" propagation="REQUIRED"/>-->
<!--                     <tx:method name="delete" propagation="REQUIRED"/>-->
<!--                     <tx:method name="update" propagation="REQUIRED"/>-->
<!--                     <tx:method name="select" read-only="true"/>-->
                     <tx:method name="*" propagation="REQUIRED"/>
              </tx:attributes>
       </tx:advice>
<!--       配置事务切入-->
       <aop:config>
              <aop:pointcut id="txPointCut" expression="execution(* com.mei.dao.*.*(..))"/>
              <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
       </aop:config>

</beans>

